-- Create Table E_commerce selaes.
create table E_commerce(
Transaction_ID int primary key,
User_Name TEXT NOT NULL,
Age int not null,
Country varchar(50) not null,
Product_Category varchar(60) not null,
Purchase_Amount numeric(5,2) not null,
Payment_Method varchar(60) not null,
Transaction_Date date not null);

-- now import dataset from device.

copy E_commerce(Transaction_ID,User_Name, Age, Country,
Product_Category, Purchase_Amount,
Payment_Method, Transaction_Date)
from 'D:/E_Commerce_datasets.csv'
Delimiter ',' CSV header;
-- display data sets.

select * from E_commerce;
-- now check null values.  

--CLEANNING

-- FOR TRANSACTION_ID.
SELECT COUNT(TRANSACTION_ID) FROM E_COMMERCE
WHERE TRANSACTION_ID IS NULL;
--FOR USER_NAME
SELECT COUNT(USER_NAME) FROM E_COMMERCE
WHERE USER_NAME IS NULL;
-- FOR AGE
SELECT COUNT(AGE) FROM E_COMMERCE
WHERE AGE IS NULL;
--FOR Country Product_Category
SELECT COUNT(Product_Category) FROM E_COMMERCE
WHERE Product_Category IS NULL;
-- FOR Purchase_Amount
SELECT COUNT(Purchase_Amount) FROM E_COMMERCE
WHERE Purchase_Amount IS NULL;
-- FOR Payment_Method
SELECT COUNT(Payment_Method) FROM E_COMMERCE
WHERE Payment_Method IS NULL;
-- FOR Transaction_Date.
SELECT COUNT(Transaction_Date) FROM E_COMMERCE
WHERE Transaction_Date IS NULL;

--PREPROSSING
-- EXTRACT DATA FROM TRANSACTION DATE.
SELECT TRANSACTION_DATE FROM E_COMMERCE;

ALTER TABLE E_COMMERCE
DROP COLUMN WEEK_DAY,
DROP COLUMN MONTH_NAME,
DROP COLUMN IF EXISTS YEAR;
-- ADD NEW COLUMNS WEEK_DAY NAE AND MONTH NAME EXTRACT FROM TEANSACTION_DATE.
ALTER TABLE E_COMMERCE
ADD COLUMN YEAR NUMERIC(4),
ADD COLUMN WEEK_DAY VARCHAR(10),
ADD COLUMN MONTH_NAME VARCHAR(10);
--EXTRACT AND FILL THE VALUES IN THE CELL.
UPDATE E_commerce
SET 
    week_day   = TRIM(TO_CHAR(Transaction_Date, 'Day')),
    month_name = TRIM(TO_CHAR(Transaction_Date, 'Month')),
    "year"     = EXTRACT(YEAR FROM Transaction_Date);	
-- CHECK UNIQUE VALUES IN A PARTICULAR COLUMN	
SELECT DISTINCT PAYMENT_METHOD FROM E_COMMERCE;
SELECT DISTINCT COUNTRY FROM E_COMMERCE;
SELECT DISTINCT PRODUCT_CATEGORY FROM E_COMMERCE;
-- CHECK UNIQUE AGE AND ARRANGE ASCINDING ORDER
SELECT DISTINCT AGE FROM E_COMMERCE
ORDER BY AGE ASC;
--ADD NEW COLUNS ON THE AGE GROUP.
ALTER TABLE E_commerce
ADD COLUMN AGE_GROUP VARCHAR(20);
-- ENTER DATA INTO COLUMNS.
UPDATE E_commerce
SET 
	AGE_GROUP = CASE
	WHEN AGE BETWEEN 18 AND 28 THEN 'TEEN_AGERS'
	WHEN AGE>=29 AND AGE<=37 THEN 'ADULTS'
	WHEN AGE>=38 THEN 'SENIOR CITIZENS'
	end;
--DROP COLUMNS.	
ALTER TABLE E_COMMERCE
DROP COLUMN AGE_GROUP;
-- CHECK NULL VALUES
SELECT COUNT(AGE_GROUP) FROM E_commerce
WHERE AGE_GROUP IS NULL;

--DISPLAY THE TABLE
SELECT * FROM E_COMMERCE;

-- ASCIENDING ORDER ON THE BASED ON TRANSACTION_ID
SELECT * FROM E_COMMERCE 
ORDER BY TRANSACTION_ID ASC;

-- EXPLORITRY DATA ANALYSIS

-- QUERIES BASED ON INSIDES

--1. HOW MUCH SEALES PER YEAR?
--2. TOP 5 PRODUCT BASED ON SEALES.
--3. POT 3 PAYMENT METHOD BASED ON SEALES.
--4. TOP 5 COUNTRY BASED ON SEALES.
--5. TOP 5 PRODUCT_CATEGORY BASED ON SEALES AND BASED ON COUNTRY.
--6. AGE GROUP BASED ON SALES
--7. SEALES BASED ON MONTH
--8 SEALES BASED ON WEEK DAT
--9. TOTAL CUSTOMER BASED ON YEAR/ HOW MUCH CUSTOMER COMES PER YEAR.
--10 WHICH MONTH CUSTOMER VISIT AND SEALES.
--11. MOST OF THE CUSTOMER WHICH TYPE OF PRODUCT Purchase?

SELECT * FROM E_COMMERCE;
--1. HOW MUCH SEALES PER YEAR?
SELECT SUM(PURCHASE_AMOUNT),year
FROM E_commerce
GROUP BY YEAR;

--2. TOP 5 PRODUCT BASED ON SEALES.

SELECT  PRODUCT_CATEGORY,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY PRODUCT_CATEGORY 
ORDER BY TOTAL_AMOUNT DESC LIMIT 5;

--3. POT 3 PAYMENT METHOD BASED ON SEALES.
SELECT  PAYMENT_METHOD,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY PAYMENT_METHOD 
ORDER BY TOTAL_AMOUNT DESC LIMIT 3;

--4. TOP 5 COUNTRY BASED ON SEALES.
SELECT  COUNTRY,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY COUNTRY 
ORDER BY TOTAL_AMOUNT DESC LIMIT 5;

--5. TOP 5 PRODUCT_CATEGORY BASED ON SEALES AND BASED ON COUNTRY.
SELECT  PRODUCT_CATEGORY,COUNTRY,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY PRODUCT_CATEGORY, COUNTRY
ORDER BY TOTAL_AMOUNT DESC LIMIT 5;

--6. AGE GROUP BASED ON SALES.
SELECT  AGE_GROUP,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY AGE_GROUP
ORDER BY TOTAL_AMOUNT DESC LIMIT 5;

--7. SEALES BASED ON MONTH.
SELECT  MONTH_NAME,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY MONTH_NAME
ORDER BY 
    CASE TRIM(MONTH_NAME)
        WHEN 'January' THEN 1
        WHEN 'February' THEN 2
        WHEN 'March' THEN 3
        WHEN 'April' THEN 4
        WHEN 'May' THEN 5
        WHEN 'June' THEN 6
        WHEN 'July' THEN 7
		WHEN 'August' THEN 8
		WHEN 'September' THEN 9
		WHEN 'October' THEN 10
		WHEN 'November' THEN 11
		WHEN 'Decembe' THEN 12
    END; 

--8 SEALES BASED ON WEEK DAT.
SELECT  WEEK_DAY,SUM(PURCHASE_AMOUNT) AS TOTAL_AMOUNT
FROM E_commerce
GROUP BY WEEK_DAY
ORDER BY 
    CASE TRIM(week_day)
        WHEN 'Monday' THEN 1
        WHEN 'Tuesday' THEN 2
        WHEN 'Wednesday' THEN 3
        WHEN 'Thursday' THEN 4
        WHEN 'Friday' THEN 5
        WHEN 'Saturday' THEN 6
        WHEN 'Sunday' THEN 7
    END; 

--9. TOTAL CUSTOMER BASED ON YEAR/ HOW MUCH CUSTOMER COMES PER YEAR.
SELECT YEAR,COUNT(TRANSACTION_ID) AS TOTAL
FROM E_COMMERCE
GROUP BY YEAR;

--10 WHICH MONTH CUSTOMER VISIT AND SEALES.
SELECT MONTH_NAME,COUNT(TRANSACTION_ID) AS TOTAL
FROM E_COMMERCE
GROUP BY MONTH_NAME
ORDER BY 
    CASE TRIM(MONTH_NAME)
        WHEN 'January' THEN 1
        WHEN 'February' THEN 2
        WHEN 'March' THEN 3
        WHEN 'April' THEN 4
        WHEN 'May' THEN 5
        WHEN 'June' THEN 6
        WHEN 'July' THEN 7
		WHEN 'August' THEN 8
		WHEN 'September' THEN 9
		WHEN 'October' THEN 10
		WHEN 'November' THEN 11
		WHEN 'Decembe' THEN 12
    END; 

--11. MOST OF THE CUSTOMER WHICH TYPE OF PRODUCT Purchase?
SELECT PRODUCT_CATEGORY, COUNT(TRANSACTION_ID) AS TOTAL_CUSTOME
FROM E_COMMERCE
GROUP BY PRODUCT_CATEGORY;
